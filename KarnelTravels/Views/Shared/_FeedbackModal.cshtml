@model FeedbackViewModel

<div class="modal fade" id="commentModal" tabindex="-1" aria-labelledby="commentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="commentModalLabel">@(!Model.IsSubmitted ? "Add a Comment" : "Thank You!")</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="feedbackModalBody">
                @if (!Model.IsSubmitted)
                {
                    <form id="feedbackForm">
                        <div class="form-outline mb-3">
                            <input type="email" class="form-control" id="customerEmail" name="CustomerEmail" required />
                            <label class="form-label" for="customerEmail">Your Email</label>
                        </div>
                        <div class="form-outline mb-3">
                            <textarea class="form-control" id="commentText" name="CommentText" rows="4" required></textarea>
                            <label class="form-label" for="commentText">What is your view?</label>
                        </div>
                        <!-- Stars organized horizontally with click event listeners -->
                        <ul class="list-inline mb-3" id="starRating">
                            <li class="list-inline-item"><i class="far fa-star fa-lg text-warning" data-rating="1"></i></li>
                            <li class="list-inline-item"><i class="far fa-star fa-lg text-warning" data-rating="2"></i></li>
                            <li class="list-inline-item"><i class="far fa-star fa-lg text-warning" data-rating="3"></i></li>
                            <li class="list-inline-item"><i class="far fa-star fa-lg text-warning" data-rating="4"></i></li>
                            <li class="list-inline-item"><i class="far fa-star fa-lg text-warning" data-rating="5"></i></li>
                        </ul>
                        <input type="hidden" name="Rating" id="ratingValue" />
                        <input type="hidden" name="FeedbackObject" id="feedbackObject" />
                        <input type="hidden" name="ObjectId" id="objectId" />
                        <input type="hidden" name="Status" id="status" />
                        <div class="d-flex justify-content-between mt-3">
                            <button type="button" class="btn btn-primary" id="submitFeedback">Submit</button>
                        </div>
                    </form>
                }
                else
                {
                    <div class="alert alert-success">
                        <h5>Thank You for Your Feedback!</h5>
                        <p>We appreciate your input and will use it to improve our services.</p>
                        <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    // Add event listener for the star rating
    document.getElementById('starRating').addEventListener('click', function (event) {
        if (event.target.dataset.rating) {
            // Get the rating value from the clicked star
            var rating = event.target.dataset.rating;
            // Set the rating value to the hidden input field
            document.getElementById('ratingValue').value = rating;

            // Update the appearance of the stars based on the rating
            var stars = document.querySelectorAll('#starRating i');
            stars.forEach(star => {
                star.classList.remove('fas', 'fa-star', 'text-warning'); // Remove solid star and color
                star.classList.add('far'); // Switch to outline star

                // Highlight solid stars up to the selected rating
                if (star.dataset.rating <= rating) {
                    star.classList.add('fas', 'fa-star', 'text-warning');
                    star.classList.remove('far');
                }
            });
        }
    });

    // Update hidden inputs dynamically when the modal is shown
    document.getElementById('commentModal').addEventListener('shown.bs.modal', function () {
        document.getElementById('feedbackObject').value = 'Company';
        document.getElementById('objectId').value = 1234;
        document.getElementById('status').value = 'Active';
        document.getElementById('ratingValue').value = rating;

    });

    // Attach a click event listener to the submit button
    document.getElementById('submitFeedback').addEventListener('click', function () {
        // Use FormData to collect form inputs
        var formData = new FormData(document.getElementById('feedbackForm'));

        // Make an AJAX POST request to submit the feedback
        fetch('/Home/SubmitFeedback', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                // Replace modal content with the "Thank You" message
                document.getElementById('feedbackModalBody').innerHTML = `
                        <div class="alert alert-success">
                            <h5>Thank You for Your Feedback!</h5>
                            <p>We appreciate your input and will use it to improve our services.</p>
                            <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
                        </div>
                    `;
            })
            .catch(error => {
                console.error('Error submitting feedback:', error);
            });
    });
</script>
