@* @model CreateNewsViewModel

@{
    ViewData["Title"] = "CreateNews";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1>CreateNews</h1>

<hr />

<div class="container">
    <form asp-action="CreateNews" method="post" enctype="multipart/form-data">
        <div class="row">
            <!-- Left Column for Form Inputs -->
            <div class="col-md-6">
                <!-- Inputs for News Data -->
                <div class="form-group">
                    <label asp-for="News.NewsItem.NewsObject" class="control-label">News Object</label>
                    <select asp-for="News.NewsItem.NewsObject" asp-items="Model.NewsObjectList" class="form-control">
                        <option value="">-- Select News Object --</option>
                    </select>
                    <span asp-validation-for="News.NewsItem.NewsObject" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="objectNameDropdown" class="control-label">Object Name</label>
                    <select id="objectNameDropdown" name="News.NewsItem.ObjectId" class="form-control">
                        <option value="">-- Select Object --</option>
                    </select>
                    <span asp-validation-for="News.NewsItem.ObjectId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="News.NewsItem.Description" class="control-label">Description</label>
                    <input asp-for="News.NewsItem.Description" class="form-control" />
                    <span asp-validation-for="News.NewsItem.Description" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="News.NewsItem.Status" class="control-label">Status</label>
                    <select asp-for="News.NewsItem.Status" asp-items="Model.StatusList" class="form-control">
                        <option value="">-- Select Status --</option>
                    </select>
                    <span asp-validation-for="News.NewsItem.Status" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="News.NewsItem.HotNews" class="control-label">Hot News</label>
                    <div class="form-check">
                        <input asp-for="News.NewsItem.HotNews" class="form-check-input" type="radio" value="1" id="hotNewsYes">
                        <label class="form-check-label" for="hotNewsYes">Yes</label>
                    </div>
                    <div class="form-check">
                        <input asp-for="News.NewsItem.HotNews" class="form-check-input" type="radio" value="0" id="hotNewsNo">
                        <label class="form-check-label" for="hotNewsNo">No</label>
                    </div>
                    <span asp-validation-for="News.NewsItem.HotNews" class="text-danger"></span>
                </div>
            </div>

            <!-- Right Column for News Detail and Image Upload -->
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="News.NewsItem.NewsDetail" class="control-label">News Detail</label>
                    <textarea asp-for="News.NewsItem.NewsDetail" class="form-control" rows="10"></textarea>
                    <span asp-validation-for="News.NewsItem.NewsDetail" class="text-danger"></span>
                </div>

                <!-- Existing Thumbnails Display Area -->
                <div class="form-group">
                    <label>Existing Images</label>
                    <div id="existing-images">
                        @if (Model.News.ImageUrls != null && Model.News.ImageUrls.Count > 0)
                        {
                            foreach (var imageUrl in Model.News.ImageUrls)
                            {
                                <img src="@imageUrl.Url" alt="Thumbnail" style="width: 100px; height: 100px; margin-right: 5px;">
                            }
                        }
                        else
                        {
                            <p>No thumbnails available.</p>
                        }
                    </div>
                </div>

                <!-- New Image Upload Area -->
                <div class="form-group">
                    <label for="imageUpload">Upload New Images</label>
                    <input type="file" class="form-control-file" id="imageUpload" name="files" multiple>
                </div>
                <div id="imagePreview"></div> <!-- Container for showing image previews -->
            </div>

            <div class="form-group col-md-12">
                <button type="submit" class="btn btn-primary">Create News</button>
            </div>
        </div>
    </form>
</div>

<div>
    <a asp-action="AdminNewsView">Back to List</a>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            console.log("Script loaded and event bound.");
            var selectedNewsObject = ""; // Initialize a variable to store the selected news object

            $('#News_NewsItem_NewsObject').change(function () {
                selectedNewsObject = $(this).val(); // Update the selectedNewsObject variable
                updateObjectNames(selectedNewsObject);
            });

            $('#objectNameDropdown').change(function () {
                var objectId = $(this).val(); // Get the currently selected object ID
                if (selectedNewsObject && objectId) { // Check if both values are available
                    updateExistingImages(selectedNewsObject, objectId);
                }
            });

            function updateObjectNames(newsObject) {
                $.ajax({
                    url: '@Url.Action("GetObjectNames", "Admin")',
                    type: 'GET',
                    data: { newsObject: newsObject },
                    success: function (data) {
                        var objectIdSelect = $('#objectNameDropdown');
                        objectIdSelect.empty();
                        objectIdSelect.append($('<option>', { value: "", text: "Select Object..." }));
                        $.each(data, function (index, item) {
                            objectIdSelect.append($('<option>', { value: item.id, text: item.name }));
                        });
                    },
                    error: function (error) {
                        console.error("Error fetching data: ", error);
                    }
                });
            }

            function updateExistingImages(newsObject, objectId) {
                $.ajax({
                    url: '@Url.Action("GetExistingImages", "Admin")',
                    type: 'GET',
                    data: { objectId: objectId, newsObject: newsObject },
                    success: function (data) {
                        var imagesDiv = $('#existing-images');
                        imagesDiv.empty();
                        if (data && data.length > 0) {
                            data.forEach(function (imageUrl) {
                                imagesDiv.append('<img src="/img/' + newsObject + '/' + imageUrl.url + '" alt="Thumbnail" style="width: 100px; height: 100px; margin-right: 5px;">');


                            });
                        } else {
                            imagesDiv.append('<p>No thumbnails available.</p>');
                        }
                    },
                    error: function (error) {
                        console.error("Error fetching images: ", error);
                    }
                });
            }
        });

        document.getElementById('imageUpload').addEventListener('change', function (event) {
            var files = event.target.files;
            var imagePreviewDiv = document.getElementById('imagePreview');
            imagePreviewDiv.innerHTML = ''; // Clear existing previews

            for (var i = 0; i < files.length; i++) {
                var file = files[i];

                // Ensure the file is an image
                if (file.type.startsWith('image/')) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        var imgElement = document.createElement('img');
                        imgElement.src = e.target.result;
                        imgElement.style.width = '100px';  // Set the size as per your requirement
                        imgElement.style.height = '100px';
                        imgElement.style.marginRight = '5px';
                        imagePreviewDiv.appendChild(imgElement);
                    };

                    reader.readAsDataURL(file); // Read the file as a Data URL to preview it
                }
            }
        });
    </script>
}

 *@


@model CreateNewsViewModel

@{
    ViewData["Title"] = "CreateNews";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1>CreateNews</h1>

<hr />

<div class="container">
    <form asp-action="CreateNews" method="post" enctype="multipart/form-data">
        <div class="row">
            <!-- Left Column for Form Inputs -->
            <div class="col-md-6">
                <!-- Inputs for News Data -->
                <div class="form-group">
                    <label asp-for="News.NewsItem.NewsObject" class="control-label">News Object</label>
                    <select asp-for="News.NewsItem.NewsObject" asp-items="Model.NewsObjectList" class="form-control">
                        <option value="">-- Select News Object --</option>
                    </select>
                    <span asp-validation-for="News.NewsItem.NewsObject" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label for="objectNameDropdown" class="control-label">Object Name</label>
                    <select id="objectNameDropdown" name="News.NewsItem.ObjectId" class="form-control">
                        <option value="">-- Select Object --</option>
                    </select>
                    <span asp-validation-for="News.NewsItem.ObjectId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="News.NewsItem.Description" class="control-label">Description</label>
                    <input asp-for="News.NewsItem.Description" class="form-control" />
                    <span asp-validation-for="News.NewsItem.Description" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="News.NewsItem.Status" class="control-label">Status</label>
                    <select asp-for="News.NewsItem.Status" asp-items="Model.StatusList" class="form-control">
                        <option value="">-- Select Status --</option>
                    </select>
                    <span asp-validation-for="News.NewsItem.Status" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="News.NewsItem.HotNews" class="control-label">Hot News</label>
                    <div class="form-check">
                        <input asp-for="News.NewsItem.HotNews" class="form-check-input" type="radio" value="1" id="hotNewsYes">
                        <label class="form-check-label" for="hotNewsYes">Yes</label>
                    </div>
                    <div class="form-check">
                        <input asp-for="News.NewsItem.HotNews" class="form-check-input" type="radio" value="0" id="hotNewsNo">
                        <label class="form-check-label" for="hotNewsNo">No</label>
                    </div>
                    <span asp-validation-for="News.NewsItem.HotNews" class="text-danger"></span>
                </div>
            </div>

            <!-- Right Column for News Detail and Image Upload -->
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="News.NewsItem.NewsDetail" class="control-label">News Detail</label>
                    <textarea asp-for="News.NewsItem.NewsDetail" class="form-control" rows="10"></textarea>
                    <span asp-validation-for="News.NewsItem.NewsDetail" class="text-danger"></span>
                </div>

                <!-- Existing Thumbnails Display Area -->
                <div class="form-group">
                    <label>Existing Images</label>
                    <div id="existing-images">
                        @if (Model.News.ImageUrls != null && Model.News.ImageUrls.Count > 0)
                        {
                            foreach (var imageUrl in Model.News.ImageUrls)
                            {
                                <img src="@imageUrl.Url" alt="Thumbnail" style="width: 100px; height: 100px; margin-right: 5px;">
                            }
                        }
                        else
                        {
                            <p>No thumbnails available.</p>
                        }
                    </div>
                </div>

                <!-- New Image Upload Area -->
                <div class="form-group">
                    <label for="imageUpload">Upload New Images</label>
                    <input type="file" class="form-control-file" id="imageUpload" name="files" multiple>

                    <label for="fileDescriptions">Descriptions</label>
                    <div id="fileDescriptions">
                        <!-- JavaScript will add description inputs dynamically here -->
                    </div>
                </div>
                <div id="imagePreview"></div> <!-- Container for showing image previews -->
            </div>

            <div class="form-group col-md-12">
                <button type="submit" class="btn btn-primary">Create News</button>
            </div>
        </div>
    </form>
</div>

<div>
    <a asp-action="AdminNewsView">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            console.log("Script loaded and event bound.");
            var selectedNewsObject = ""; // Initialize variable to store the selected News Object

            // Handle News Object selection to update the Object Name dropdown
            $('#News_NewsItem_NewsObject').change(function () {
                selectedNewsObject = $(this).val(); // Update the selectedNewsObject variable
                console.log("Selected News Object:", selectedNewsObject);
                updateObjectNames(selectedNewsObject);
            });

            // Handle Object Name dropdown changes
            $('#objectNameDropdown').change(function () {
                var objectId = $(this).val(); // Get the currently selected object ID
                console.log("Selected Object ID:", objectId);
                console.log("Selected News Object (from global):", selectedNewsObject);

                if (selectedNewsObject && objectId) { // Ensure both values are available
                    updateExistingImages(selectedNewsObject, objectId);
                } else {
                    console.warn("Missing required values for image update.");
                }
            });

            // Function to update the Object Name dropdown based on the selected News Object
            function updateObjectNames(newsObject) {
                console.log("Updating Object Names for News Object:", newsObject);
                $.ajax({
                    url: '@Url.Action("GetObjectNames", "Admin")',
                    type: 'GET',
                    data: { newsObject: newsObject },
                    success: function (data) {
                        var objectIdSelect = $('#objectNameDropdown');
                        objectIdSelect.empty();
                        objectIdSelect.append($('<option>', { value: "", text: "-- Select Object --" }));
                        $.each(data, function (index, item) {
                            objectIdSelect.append($('<option>', { value: item.id, text: item.name }));
                        });
                    },
                    error: function (error) {
                        console.error("Error fetching data:", error);
                    }
                });
            }

            // Function to update existing images based on the selected News Object and Object ID
            function updateExistingImages(newsObject, objectId) {
                console.log("Updating Existing Images for News Object:", newsObject, "Object ID:", objectId);
                $.ajax({
                    url: '@Url.Action("GetExistingImages", "Admin")',
                    type: 'GET',
                    data: { objectId: objectId, newsObject: newsObject },
                    success: function (data) {
                        var imagesDiv = $('#existing-images');
                        imagesDiv.empty();
                        if (data && data.length > 0) {
                            data.forEach(function (imageUrl) {
                                imagesDiv.append('<img src="/img/' + newsObject + '/' + imageUrl.url + '" alt="Thumbnail" style="width: 100px; height: 100px; margin-right: 5px;">');
                            });
                        } else {
                            imagesDiv.append('<p>No thumbnails available.</p>');
                        }
                    },
                    error: function (error) {
                        console.error("Error fetching images:", error);
                    }
                });
            }

            // Handle image file changes
            $('#imageUpload').on('change', function () {
                var files = this.files;
                var fileDescriptionsDiv = $('#fileDescriptions');
                var imagePreviewDiv = $('#imagePreview');

                // Clear existing previews and description inputs
                fileDescriptionsDiv.empty();
                imagePreviewDiv.empty();

                for (var i = 0; i < files.length; i++) {
                    var file = files[i];

                    // Add a description input for each file
                    var descriptionInput = $('<input>', {
                        type: 'text',
                        name: 'fileDescriptions[' + i + ']',
                        class: 'form-control',
                        placeholder: 'Description for ' + file.name
                    });
                    fileDescriptionsDiv.append(descriptionInput);

                    // Ensure the file is an image for preview
                    if (file.type.startsWith('image/')) {
                        var reader = new FileReader();

                        reader.onload = function (e) {
                            var imgElement = $('<img>', {
                                src: e.target.result,
                                style: 'width: 100px; height: 100px; margin-right: 5px;'
                            });
                            imagePreviewDiv.append(imgElement);
                        };

                        reader.readAsDataURL(file); // Read the file for preview
                    }
                }
            });
        });
    </script>
}

