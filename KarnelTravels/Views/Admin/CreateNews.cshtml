@model CreateNewsViewModel

@{
    ViewData["Title"] = "CreateNews";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@* <script src="https://cdn.ckeditor.com/4.16.1/standard/ckeditor.js"></script> *@
<script src="https://cdn.ckeditor.com/4.16.1/full/ckeditor.js"></script>
<!--This is the view where admin can create news-->
<div class="row">
    <div class="col-md-3"></div>
    <div class="col-md-6">
        <div class="ibox">
            <div class="ibox-body">
                <form asp-action="CreateNews" method="post" enctype="multipart/form-data">
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label asp-for="News.NewsItem.NewsObject">Category <span class="text-muted" style="font-size:10px">- Select news category</span></label>
                            <select asp-for="News.NewsItem.NewsObject" asp-items="Model.NewsObjectList" class="form-control">
                                <option value="">---Select News Category---</option>
                            </select>

                            <span asp-validation-for="News.NewsItem.NewsObject" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-6">
                            <label for="objectNameDropdown">Target Object <span class="text-muted" style="font-size:10px">- Select news category first to reveal target objects</span></label>
                            <select id="objectNameDropdown" name="News.NewsItem.ObjectId" class="form-control">
                                <option value="">---Select Category Before Browsing---</option>
                            </select>
                            <span asp-validation-for="News.NewsItem.ObjectId" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-4">
                            <label asp-for="News.NewsItem.Description">Description <span class="text-muted" style="font-size:10px">- Enter some descriptions</span></label>
                            <input asp-for="News.NewsItem.Description" class="form-control" />
                            <span asp-validation-for="News.NewsItem.Description" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-4">
                            <label asp-for="News.NewsItem.Status">Status <span class="text-muted" style="font-size:10px">- Select status Active/DeActive</span></label>
                            <select asp-for="News.NewsItem.Status" asp-items="Model.StatusList" class="form-control">
                                <option value="">-- Select Status --</option>
                            </select>
                            <span asp-validation-for="News.NewsItem.Status" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-4">
                            <label asp-for="News.NewsItem.HotNews">Hot News </label>
                            <span class="text-muted" style="font-size:10px">- Put this in hot news ?</span>

                            <div>
                                <input asp-for="News.NewsItem.HotNews" type="radio" value="1" id="hotNewsYes">
                                <label for="hotNewsYes">Yes</label> &nbsp;&nbsp;
                                <input asp-for="News.NewsItem.HotNews" type="radio" value="0" id="hotNewsNo">
                                <label for="hotNewsNo">No</label>
                            </div>
                            <span asp-validation-for="News.NewsItem.HotNews" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-12">
                            <label asp-for="News.NewsItem.NewsDetail">News Detail <span class="text-muted" style="font-size:10px">- Enter some details/descriptions for your news, as this will be considered the content for your news.</span></label>
                            <textarea asp-for="News.NewsItem.NewsDetail" class="form-control" rows="10" id="news-detail-textarea"></textarea>
                            <span asp-validation-for="News.NewsItem.NewsDetail" class="text-danger"></span>
                        </div>

                    </div>
                    <div class="row">
                        <div class="form-group col-md-12">
                            <label>
                                Existing Images <span class="text-muted" style="font-size:10px">
                                    - Shown existed images for your news.
                                </span>
                            </label>
                            <div id="existing-images">
                                @if (Model.News.ImageUrls != null && Model.News.ImageUrls.Count > 0)
                                {
                                    foreach (var imageUrl in Model.News.ImageUrls)
                                    {
                                        <img src="@imageUrl.Url" alt="Thumbnail" style="width: 100px; height: 100px; margin-right: 5px;">
                                    }
                                }
                                else
                                {
                                    <p>No images available.</p>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <!-- New Image Upload Area -->
                        <div class="form-group col-md-12">
                            <label for="imageUpload">
                                Upload New Images <span class="text-muted" style="font-size:10px">
                                    - Click the upload button to give your news photos.
                                </span>
                            </label>
                            <input type="file" class="form-control-file" class="btn btn-info" id="imageUpload" name="files" multiple>
                            <br />
                            <label for="fileDescriptions">
                                Descriptions <span class="text-muted" style="font-size:10px">
                                    - Enter descriptions for photos you've chosen.
                                </span>
                            </label>
                            <div id="fileDescriptions">
                                <!-- JavaScript will add description inputs dynamically here -->
                            </div>
                        </div>
                        <div class="form-group col-md-6" id="imagePreview"></div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-12">
                            <button type="submit" class="btn btn-success">Create News</button>
                            <a class="btn btn-danger" asp-action="AdminNewsView">Back to Page</a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="col-md-3"></div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>

        $(document).ready(function () {
            console.log("Script loaded and event bound.");
            var selectedNewsObject = ""; // Initialize variable to store the selected News Object

            // Handle News Object selection to update the Object Name dropdown
            $('#News_NewsItem_NewsObject').change(function () {
                selectedNewsObject = $(this).val(); // Update the selectedNewsObject variable
                console.log("Selected News Object:", selectedNewsObject);
                updateObjectNames(selectedNewsObject);
            });

            // Handle Object Name dropdown changes
            $('#objectNameDropdown').change(function () {
                var objectId = $(this).val(); // Get the currently selected object ID
                console.log("Selected Object ID:", objectId);
                console.log("Selected News Object (from global):", selectedNewsObject);

                if (selectedNewsObject && objectId) { // Ensure both values are available
                    updateExistingImages(selectedNewsObject, objectId);
                } else {
                    console.warn("Missing required values for image update.");
                }
            });

            // Function to update the Object Name dropdown based on the selected News Object
            function updateObjectNames(newsObject) {
                console.log("Updating Object Names for News Object:", newsObject);
                $.ajax({
                    url: '@Url.Action("GetObjectNames", "Admin")',
                    type: 'GET',
                    data: { newsObject: newsObject },
                    success: function (data) {
                        var objectIdSelect = $('#objectNameDropdown');
                        objectIdSelect.empty();
                        objectIdSelect.append($('<option>', { value: "", text: "-- Select Object --" }));
                        $.each(data, function (index, item) {
                            objectIdSelect.append($('<option>', { value: item.id, text: item.name }));
                        });
                    },
                    error: function (error) {
                        console.error("Error fetching data:", error);
                    }
                });
            }

            // Function to update existing images based on the selected News Object and Object ID
            function updateExistingImages(newsObject, objectId) {
                console.log("Updating Existing Images for News Object:", newsObject, "Object ID:", objectId);
                $.ajax({
                    url: '@Url.Action("GetExistingImages", "Admin")',
                    type: 'GET',
                    data: { objectId: objectId, newsObject: newsObject },
                    success: function (data) {
                        var imagesDiv = $('#existing-images');
                        imagesDiv.empty();
                        if (data && data.length > 0) {
                            data.forEach(function (imageUrl) {
                                imagesDiv.append('<img src="/img/' + newsObject + '/' + imageUrl.url + '" alt="Thumbnail" style="width: 100px; height: 100px; margin-right: 5px;">');
                            });
                        } else {
                            imagesDiv.append('<p>No thumbnails available.</p>');
                        }
                    },
                    error: function (error) {
                        console.error("Error fetching images:", error);
                    }
                });
            }

            // Handle image file changes
            // $('#imageUpload').on('change', function () {
            //     var files = this.files;
            //     var fileDescriptionsDiv = $('#fileDescriptions');
            //     var imagePreviewDiv = $('#imagePreview');

            //     // Clear existing previews and description inputs
            //     fileDescriptionsDiv.empty();
            //     imagePreviewDiv.empty();

            //     for (var i = 0; i < files.length; i++) {
            //         var file = files[i];

            //         // Add a description input for each file
            //         var descriptionInput = $('<input>', {
            //             type: 'text',
            //             name: 'fileDescriptions[' + i + ']',
            //             class: 'form-control',
            //             placeholder: 'Description for ' + file.name
            //         });
            //         fileDescriptionsDiv.append(descriptionInput);

            //         // Ensure the file is an image for preview
            //         if (file.type.startsWith('image/')) {
            //             var reader = new FileReader();

            //             reader.onload = function (e) {
            //                 var imgElement = $('<img>', {
            //                     src: e.target.result,
            //                     style: 'width: 100px; height: 100px; margin-right: 5px;'
            //                 });
            //                 imagePreviewDiv.append(imgElement);
            //             };

            //             reader.readAsDataURL(file); // Read the file for preview
            //         }
            //     }
            // });
            $('#imageUpload').on('change', function () {
                var files = this.files;
                var fileDescriptionsDiv = $('#fileDescriptions');
                var imagePreviewDiv = $('#imagePreview');

                // Clear existing previews and description inputs
                fileDescriptionsDiv.empty();
                imagePreviewDiv.empty();

                for (var i = 0; i < files.length; i++) {
                    var file = files[i];

                    // Generate unique IDs for the input and image
                    var inputId = 'descInput-' + i;
                    var imageId = 'imgPreview-' + i;

                    // Add a description input for each file
                    var descriptionInput = $('<input>', {
                        type: 'text',
                        id: inputId,
                        name: 'fileDescriptions[' + i + ']',
                        class: 'form-control',
                        placeholder: 'Description for ' + file.name
                    });
                    fileDescriptionsDiv.append(descriptionInput);

                    // Ensure the file is an image for preview
                    if (file.type.startsWith('image/')) {
                        var reader = new FileReader();

                        reader.onload = (function (imageId) { // Capture imageId in a closure
                            return function (e) {
                                var imgElement = $('<img>', {
                                    src: e.target.result,
                                    id: imageId,
                                    style: 'width: 100px; height: 100px; margin-right: 5px;'
                                });
                                imagePreviewDiv.append(imgElement);
                            };
                        })(imageId);

                        reader.readAsDataURL(file);
                    }

                    // Add event listeners to highlight the image when editing its description
                    $('#' + inputId).on('focus', function () {
                        var index = this.id.split('-')[1];
                        $('#imgPreview-' + index).css('border', '3px solid blue');
                    }).on('blur', function () {
                        var index = this.id.split('-')[1];
                        $('#imgPreview-' + index).css('border', '');
                    });
                }
            });

            CKEDITOR.replace('news-detail-textarea');
        });
    </script>
}