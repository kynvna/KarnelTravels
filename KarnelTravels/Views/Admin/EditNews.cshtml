@model KarnelTravels.Models.CreateNewsViewModel

@{
    ViewData["Title"] = "Edit News";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<script src="https://cdn.ckeditor.com/4.16.1/full/ckeditor.js"></script>
<div class="ibox">
    <div class="ibox-head">
        <h2 class="ibox-title">
            Editing current news
        </h2>
    </div>
    <div class="ibox-body">
        <form asp-action="EditNews" method="post" enctype="multipart/form-data">
            <input type="hidden" asp-for="News.NewsItem.NewsId" />
            <input type="hidden" asp-for="News.NewsItem.ObjectId" />
            <input type="hidden" asp-for="News.NewsItem.NewsObject" />

            <div class="row">
                <div class="form-group col-md-6">
                    <label asp-for="News.NewsItem.Description">Description</label>
                    <input asp-for="News.NewsItem.Description" class="form-control" />
                    <span asp-validation-for="News.NewsItem.Description"></span>
                </div>
                <div class="form-group col-md-6">
                    <label asp-for="News.NewsItem.Status">Status</label>
                    <select asp-for="News.NewsItem.Status" asp-items="Model.StatusList" class="form-control"></select>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-6">
                    <label asp-for="News.NewsItem.HotNews">Hot News</label>
                    <div>
                        <input asp-for="News.NewsItem.HotNews" type="radio" value="1" id="hotNewsYes">
                        <label for="hotNewsYes">Yes</label>
                    </div>
                    <div>
                        <input asp-for="News.NewsItem.HotNews" type="radio" value="0" id="hotNewsNo">
                        <label for="hotNewsNo">No</label>
                    </div>
                    <span asp-validation-for="News.NewsItem.HotNews" class="text-danger"></span>
                </div>
                <div class="form-group col-md-6">
                    <label asp-for="News.NewsItem.Date">Date(original)</label>
                    <input asp-for="News.NewsItem.Date" type="date" readonly class="form-control" />
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-12">
                    <label asp-for="News.NewsItem.NewsDetail">News Detail <span class="text-muted" style="font-size:10px">- Enter some details/descriptions for your news, as this will be considered the content for your news.</span></label>
                    <textarea asp-for="News.NewsItem.NewsDetail" class="form-control" rows="10" id="news-detail-textarea"></textarea>
                    <span asp-validation-for="News.NewsItem.NewsDetail" class="text-danger"></span>
                </div>
            </div>
            <div class="row">
                <!-- Existing Thumbnails Display Area -->
                <div class="form-group col-md-4">
                    <label>Existing Images</label>
                    <div id="existing-images">
                        @if (Model.News.ImageUrls != null && Model.News.ImageUrls.Count > 0)
                        {
                            foreach (var imageUrl in Model.News.ImageUrls)
                            {
                                <img src="/img/@Model.News.NewsItem.NewsObject/@imageUrl.Url" alt="Thumbnail" style="width: 100px; height: 100px; margin-right: 5px;">
                            }
                        }
                        else
                        {
                            <p>No thumbnails available.</p>
                        }
                    </div>
                </div>
                <div class="form-group col-md-4">
                    <label for="imageUpload">Upload New Images</label>
                    <input type="file" class="form-control-file" id="imageUpload" name="files" multiple>

                    <label for="fileDescriptions">Descriptions</label>
                    <div id="fileDescriptions">
                        <!-- JavaScript will add description inputs dynamically here -->
                    </div>
                </div>
                <div class="form-group col-md-4">
                    <div id="imagePreview"></div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-12">
                    <button type="submit" class="btn btn-primary">Save Changes</button> &nbsp;
                    <a class="btn btn-danger" asp-action="AdminNewsView">Back to Page</a>
                </div>
            </div>
        </form>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function updateExistingImages(newsObject, objectId) {
            console.log("Updating Existing Images for News Object:", newsObject, "Object ID:", objectId);
            $.ajax({
                url: '@Url.Action("GetExistingImages", "Admin")',
                type: 'GET',
                data: { objectId: objectId, newsObject: newsObject },
                success: function (data) {
                    var imagesDiv = $('#existing-images');
                    imagesDiv.empty();
                    if (data && data.length > 0) {
                        data.forEach(function (imageUrl) {
                            imagesDiv.append('<img src="/img/' + newsObject + '/' + imageUrl.url + '" alt="Thumbnail" style="width: 100px; height: 100px; margin-right: 5px;">');
                        });
                    } else {
                        imagesDiv.append('<p>No thumbnails available.</p>');
                    }
                },
                error: function (error) {
                    console.error("Error fetching images:", error);
                }
            });
        }
        $(document).ready(function () {
            $('#imageUpload').on('change', function () {
                var files = this.files;
                var fileDescriptionsDiv = $('#fileDescriptions');
                var imagePreviewDiv = $('#imagePreview');

                // Clear existing previews and description inputs
                fileDescriptionsDiv.empty();
                imagePreviewDiv.empty();

                for (var i = 0; i < files.length; i++) {
                    var file = files[i];

                    // Generate unique IDs for the input and image
                    var inputId = 'descInput-' + i;
                    var imageId = 'imgPreview-' + i;

                    // Add a description input for each file
                    var descriptionInput = $('<input>', {
                        type: 'text',
                        id: inputId,
                        name: 'fileDescriptions[' + i + ']',
                        class: 'form-control',
                        placeholder: 'Description for ' + file.name
                    });
                    fileDescriptionsDiv.append(descriptionInput);

                    // Ensure the file is an image for preview
                    if (file.type.startsWith('image/')) {
                        var reader = new FileReader();

                        reader.onload = (function (imageId) { // Capture imageId in a closure
                            return function (e) {
                                var imgElement = $('<img>', {
                                    src: e.target.result,
                                    id: imageId,
                                    style: 'width: 100px; height: 100px; margin-right: 5px;'
                                });
                                imagePreviewDiv.append(imgElement);
                            };
                        })(imageId);

                        reader.readAsDataURL(file);
                    }

                    // Add event listeners to highlight the image when editing its description
                    $('#' + inputId).on('focus', function () {
                        var index = this.id.split('-')[1];
                        $('#imgPreview-' + index).css('border', '3px solid blue');
                    }).on('blur', function () {
                        var index = this.id.split('-')[1];
                        $('#imgPreview-' + index).css('border', '');
                    });
                }
            });

            CKEDITOR.replace('news-detail-textarea');
        });
    </script>
}