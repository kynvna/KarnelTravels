@model KarnelTravels.Models.SearchResultViewModel
@{
    ViewData["Title"] = "Tours";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
    var errorMessage = TempData["errorMessage"]?.ToString();
}
@using System.Linq
<!--View to the Discover Tab -->
@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger">
        <b>
            Error:
        </b>@errorMessage
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container-fluid bg-primary mb-5 wow fadeIn" data-wow-delay="0.1s" style="padding: 35px;">
    <div class="container">
        <form action="@Url.Action("AdvancedSearch", "Home")" method="GET">
            <div class="row g-2">
                <div class="col-md-8">
                    <div class="row g-2">
                        <div class="col-md-12">
                            <input id="searchInput" name="keyword" type="text" class="form-control border-0 py-3" placeholder="Enter anything you want to search here, i mean anything !!! Ex: News,...">
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-dark border-0 w-100 py-3">Find</button>
                </div>
                <div class="col-md-2">
                    <span><a class="btn btn-warning border-0 w-100 py-3" asp-controller="Home" asp-action="AdvancedSearch">Clear filter</a></span>
                </div>
            </div>
        </form>
    </div>
</div>
<div class="container-xxl py-5">
    <div class="container">
        <div class="row g-0 gx-5 align-items-end">
            <div class="col-lg-12">
                <div class="text-start mx-auto mb-5 wow slideInLeft" data-wow-delay="0.1s">
                    <h1 class="mb-3 text-center">Discover Boldly - Find what you need</h1>
                    <p class="text-center">
                        Think of anywhere, any keywords, any categories you want to explore, then type in the search bar above. KARNEL will sort out all
                        information based on your idea.
                    </p>
                </div>
            </div>
        </div>
        <div class="tab-content">
            <div class="tab-pane fade show p-0 active">
                @if (Model != null && Model.Transports.Any())
                {
                    <div class="row g-4 wow fadeInUp">
                        <h1>Transports</h1>
                        <div class="card-deck">
                            @foreach (var transp in Model.Transports)
                            {
                                <div class="col-md-12">
                                    <div class="card p-2">
                                        <div class="card-body">
                                            <a href="/home/TransportDetails?idt=@transp.TravelId" class="d-block h5 mb-2 card-title"><span style="text-decoration:none">@transp.Name</span></a>
                                            <p class="card-text">@Html.Raw(@TruncateDescription(@transp.Description, 300))</p>
                                            <a href="/home/TransportDetails?idt=@transp.TravelId" class="btn btn-warning">Discover</a>
                                        </div>
                                    </div>
                                </div>
                                <br />
                            }
                        </div>
                    </div>
                }
                <br />
                @if (Model != null && Model.Hotels.Any())
                {
                    <div class="row g-4 wow fadeInUp">
                        <h2>Hotels</h2>
                        @foreach (var hotel in Model.Hotels)
                        {
                            <div class="col-md-12">
                                <div class="card p-2">
                                    <div class="card-body">
                                        <a href="/home/HotelDetails?idt=@hotel.HrId" class="d-block h5 mb-2 card-title"><span style="text-decoration:none">@hotel.Name</span></a>
                                        <p class="card-text">@Html.Raw(@TruncateDescription(hotel.Description, 300))</p>
                                        <a href="/home/HotelDetails?idt=@hotel.HrId" class="btn btn-warning">Discover</a>
                                    </div>
                                </div>
                            </div>
                            <br />
                        }
                    </div>
                }
                <br />
                @if (Model != null && Model.TouristPlaces.Any())
                {
                    <div class="row g-4 wow fadeInUp">
                        <h2>Tourist Places</h2>
                        @foreach (var place in Model.TouristPlaces)
                        {
                            <div class="col-md-12">
                                <div class="card p-2">
                                    <div class="card-body">
                                        <h5 class="d-block h5 mb-2 card-title" onclick="location.href='@Url.Action("SightDetails", "Home", new { id = place.Id })'">@place.Name</h5>
                                        <p class="card-text">@Html.Raw(@TruncateDescription(place.Description, 300))</p>
                                        <p class="btn btn-warning" onclick="location.href='@Url.Action("SightDetails", "Home", new { id = place.Id })'">Discover</p>
                                    </div>
                                </div>
                            </div>
                            <br />
                        }
                    </div>
                }
                <br />
                @if (Model != null && Model.News.Any())
                {
                    <div class="row g-4 wow fadeInUp">
                        <h2>News</h2>
                        @foreach (var news in Model.News)
                        {
                            <div class="col-md-12">
                                <div class="card p-2">
                                    <div class="card-body">
                                        <h5 class="d-block h5 mb-2 card-title" onclick="location.href='@Url.Action("NewsDetail", "Home", new { id = news.NewsId })'">@news.Description</h5>
                                        <p class="card-text">@Html.Raw(@TruncateDescription(news.NewsDetail, 300))</p>
                                        <p class="btn btn-warning" onclick="location.href='@Url.Action("NewsDetail", "Home", new { id = news.NewsId })'">Discover</p>
                                    </div>
                                </div>
                            </div>
                            <br />
                        }
                    </div>
                }
                <br />
                @if (Model != null && Model.Packages.Any())
                {
                    <div class="row g-4 wow fadeInUp">
                        <h2>Packages</h2>
                        @foreach (var package in Model.Packages)
                        {
                            <div class="col-md-12">
                                <div class="card p-2">
                                    <div class="card-body">
                                        <a href="/home/PackageDetails?idt=@package.PackageId" class="d-block h5 mb-2 card-title"><span style="text-decoration:none">@package.Name</span></a>
                                        <p class="card-text">@Html.Raw(@TruncateDescription(package.Description, 200))</p>
                                        <a href="/home/PackageDetails?idt=@package.PackageId" class="btn btn-warning">View Package Details</a>
                                    </div>
                                </div>
                            </div>
                            <br />
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Property List End -->
@functions {
    public string TruncateDescription(string description, int maxLength)
    {
        if (string.IsNullOrEmpty(description))
            return string.Empty;

        if (description.Length <= maxLength)
            return description;

        return description.Substring(0, maxLength) + "...";
    }
}

    @section Scripts {
    <script>
        window.onload = function () {
            document.getElementById("searchInput").focus();
        };
    </script>
    }







